name: Lint, Build and Test library

on:
  push:
    branches:
      - ci/cd
  pull_request:
    branches:
      - ci/cd
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint using Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version: [ '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -r requirements.txt

      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')

  build:
    name: Build the library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build the library
        run: python -m build

      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-library
          path: dist

  test:
    name: Test using Python ${{ matrix.python-version }}
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: built-library

      - name: Install the library
        run: pip install *.whl

      - name: Install pytest
        run: pip install pytest

      - name: Test with pytest
        run: pytest

  notify:
    name: Send workflow results to Telegram
    needs: [ build, test, lint ]
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Send notification to Telegram
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          to: ${{ secrets.TELEGRAM_TO }}
          message: |
            New commit in ${{ github.repository }}
            
            Branch: ${{ github.ref }}
            Author: ${{ github.actor }}
            Commit message: ${{ github.event.commits[0].message }}
            
            Lint status: ${{ needs.lint.result }}
            Build status: ${{ needs.lint.result }}
            Test status: ${{ needs.test.result }}

      - name: Download build artifacts, if they exist
        if: needs.build.result == 'success'
        uses: actions/download-artifact@v3
        with:
          name: built-library

      - name: Send artifacts to Telegram, if they exist
        if: needs.build.result == 'success'
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          to: ${{ secrets.TELEGRAM_TO }}
          document: ./*
